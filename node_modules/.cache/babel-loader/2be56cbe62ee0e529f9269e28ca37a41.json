{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\19512\\\\Desktop\\\\MyProjects\\\\instagram-react12\\\\src\\\\components\\\\shared\\\\Navbar.js\";\nimport React from \"react\";\nimport { useNavbarStyles, WhiteTooltip, RedTooltip } from \"../../styles\";\nimport { AppBar, Avatar, Grid, Fade, Hidden, InputBase, Typography, Zoom } from \"@material-ui/core\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport logo from \"../../images/logo.png\";\nimport { LoadingIcon, AddIcon, LikeIcon, LikeActiveIcon, ExploreIcon, ExploreActiveIcon, HomeIcon, HomeActiveIcon } from \"../../icons\";\nimport NotificationTooltip from \"../notification/NotificationTooltip\";\nimport { defaultCurrentUser, getDefaultUser } from \"../../data\";\n\nfunction Navbar({\n  minimalNavbar\n}) {\n  const classes = useNavbarStyles();\n  const history = useHistory();\n  const path = history.location.pathname;\n  return React.createElement(AppBar, {\n    className: classes.appBar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: classes.section,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(Logo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), !minimalNavbar && React.createElement(React.Fragment, null, React.createElement(Search, {\n    history: history,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(Links, {\n    path: path,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }))));\n} // This is the Logo that is also a link to the Home page.\n\n\nfunction Logo() {\n  const classes = useNavbarStyles();\n  return React.createElement(\"div\", {\n    className: classes.logoContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.logoWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: logo,\n    alt: \"Instagram\",\n    className: classes.logo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }))));\n}\n\nfunction Search({\n  history\n}) {\n  const classes = useNavbarStyles();\n  const [loading, setLoading] = React.useState(false);\n  const [results, setResults] = React.useState([]);\n  const [query, setQuery] = React.useState(\"\");\n  const hasResults = Boolean(query) && results.length > 0;\n  console.log(!query.trim());\n  React.useEffect(() => {\n    if (!query.trim()) return;\n    setResults(Array.from({\n      length: 5\n    }, () => getDefaultUser()));\n  }, [query]); // This is a function to clear the search bar.\n\n  function handleClearInput() {\n    setQuery(\"\");\n  } // This holds the Search bar. Also it gets somewhat complicated. Review.\n\n\n  return React.createElement(Hidden, {\n    xsDown: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(WhiteTooltip, {\n    arrow: true,\n    interactive: true,\n    TransitionComponent: Fade,\n    open: hasResults,\n    titile: hasResults && React.createElement(Grid, {\n      className: classes.resultContainer,\n      container: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, results.map(result => React.createElement(Grid, {\n      key: result.id,\n      item: true,\n      className: classes.resultLink,\n      onClick: () => {\n        history.push(`/${result.username}`);\n        handleClearInput();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.resultWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: classes.avatarWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Avatar, {\n      src: result.profile_image,\n      alt: \"user avatar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: classes.nameWrapper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Typography, {\n      variant: \"body1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, result.username), React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, result.name)))))),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(InputBase, {\n    className: classes.input,\n    onChange: event => setQuery(event.target.value),\n    startAdornment: React.createElement(\"span\", {\n      className: classes.searchIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }),\n    endAdornment: loading ? React.createElement(LoadingIcon, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }) : React.createElement(\"span\", {\n      onClick: handleClearInput,\n      className: classes.clearIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }),\n    placeholder: \"Search\",\n    value: query,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  })));\n} // This component controls the icons on the top right of the screen.\n\n\nfunction Links({\n  path\n}) {\n  const classes = useNavbarStyles();\n  const [showTooltip, setTooltip] = React.useState(true);\n  const [showList, setList] = React.useState(false); // Review this. Week 4, video 4, time 31:30\n  // This is responsible for changing showTooltip from true to false after 5 seconds.\n\n  React.useEffect(() => {\n    const timeout = setTimeout(handleHideTooltip, 5000);\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, []);\n\n  function handleToggleList() {\n    setList(prev => !prev);\n  }\n\n  function handleHideTooltip() {\n    setTooltip(false);\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.linksContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.linksWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(Hidden, {\n    xsDown: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, React.createElement(AddIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  })), React.createElement(Link, {\n    to: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, path === \"/\" ? React.createElement(HomeActiveIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }) : React.createElement(HomeIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  })), React.createElement(Link, {\n    to: \"/explore\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }, path === \"/explore\" ? React.createElement(ExploreActiveIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  }) : React.createElement(ExploreIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: classes.notifications,\n    onClick: handleToggleList,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, showList ? React.createElement(LikeActiveIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  }) : React.createElement(LikeIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167\n    },\n    __self: this\n  })), React.createElement(Link, {\n    to: `/${defaultCurrentUser.username}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169\n    },\n    __self: this\n  }, React.createElement(RedTooltip, {\n    arrow: true,\n    open: showTooltip,\n    onOpen: handleHideTooltip,\n    TransitionComponent: Zoom,\n    title: React.createElement(NotificationTooltip, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: path === `/${defaultCurrentUser.username}` ? classes.profileActive : \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178\n    },\n    __self: this\n  })), React.createElement(Avatar, {\n    src: defaultCurrentUser.profile_image,\n    className: classes.profileImage,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }))));\n}\n\nexport default Navbar;","map":{"version":3,"sources":["C:/Users/19512/Desktop/MyProjects/instagram-react12/src/components/shared/Navbar.js"],"names":["React","useNavbarStyles","WhiteTooltip","RedTooltip","AppBar","Avatar","Grid","Fade","Hidden","InputBase","Typography","Zoom","Link","useHistory","logo","LoadingIcon","AddIcon","LikeIcon","LikeActiveIcon","ExploreIcon","ExploreActiveIcon","HomeIcon","HomeActiveIcon","NotificationTooltip","defaultCurrentUser","getDefaultUser","Navbar","minimalNavbar","classes","history","path","location","pathname","appBar","section","Logo","logoContainer","logoWrapper","Search","loading","setLoading","useState","results","setResults","query","setQuery","hasResults","Boolean","length","console","log","trim","useEffect","Array","from","handleClearInput","resultContainer","map","result","id","resultLink","push","username","resultWrapper","avatarWrapper","profile_image","nameWrapper","name","input","event","target","value","searchIcon","clearIcon","Links","showTooltip","setTooltip","showList","setList","timeout","setTimeout","handleHideTooltip","clearTimeout","handleToggleList","prev","linksContainer","linksWrapper","notifications","profileActive","profileImage"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useNavbarStyles, WhiteTooltip, RedTooltip } from \"../../styles\";\nimport {\n  AppBar,\n  Avatar,\n  Grid,\n  Fade,\n  Hidden,\n  InputBase,\n  Typography,\n  Zoom,\n} from \"@material-ui/core\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport logo from \"../../images/logo.png\";\nimport {\n  LoadingIcon,\n  AddIcon,\n  LikeIcon,\n  LikeActiveIcon,\n  ExploreIcon,\n  ExploreActiveIcon,\n  HomeIcon,\n  HomeActiveIcon,\n} from \"../../icons\";\nimport NotificationTooltip from \"../notification/NotificationTooltip\";\nimport { defaultCurrentUser, getDefaultUser } from \"../../data\";\n\nfunction Navbar({ minimalNavbar }) {\n  const classes = useNavbarStyles();\n  const history = useHistory();\n  const path = history.location.pathname;\n\n  return (\n    <AppBar className={classes.appBar}>\n      <section className={classes.section}>\n        <Logo />\n        {!minimalNavbar && (\n          <>\n            <Search history={history} />\n            <Links path={path} />\n          </>\n        )}\n      </section>\n    </AppBar>\n  );\n}\n// This is the Logo that is also a link to the Home page.\nfunction Logo() {\n  const classes = useNavbarStyles();\n  return (\n    <div className={classes.logoContainer}>\n      <Link to=\"/\">\n        <div className={classes.logoWrapper}>\n          <img src={logo} alt=\"Instagram\" className={classes.logo} />\n        </div>\n      </Link>\n    </div>\n  );\n}\n\nfunction Search({ history }) {\n  const classes = useNavbarStyles();\n  const [loading, setLoading] = React.useState(false);\n  const [results, setResults] = React.useState([]);\n  const [query, setQuery] = React.useState(\"\");\n\n  const hasResults = Boolean(query) && results.length > 0;\n  console.log(!query.trim())\n\n  React.useEffect(() => {\n    if (!query.trim()) return;\n    setResults(Array.from({ length: 5 }, () => getDefaultUser()));\n  }, [query]);\n  // This is a function to clear the search bar.\n  function handleClearInput() {\n    setQuery(\"\");\n  }\n  // This holds the Search bar. Also it gets somewhat complicated. Review.\n  return (\n    <Hidden xsDown>\n      <WhiteTooltip\n        arrow\n        interactive\n        TransitionComponent={Fade}\n        open={hasResults}\n        titile={\n          hasResults && (\n            <Grid className={classes.resultContainer} container>\n              {results.map((result) => (\n                <Grid key={result.id} item className={classes.resultLink}\n                  onClick={() => {\n                    history.push(`/${result.username}`);\n                    handleClearInput();\n                  }}\n                >\n                  <div className={classes.resultWrapper}>\n                    <div className={classes.avatarWrapper}>\n                      <Avatar src={result.profile_image} alt=\"user avatar\" />\n                    </div>\n                    <div className={classes.nameWrapper}>\n                      <Typography variant=\"body1\">{result.username}</Typography>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        {result.name}\n                      </Typography>\n                    </div>\n                  </div>\n                </Grid>\n              ))}\n            </Grid>\n          )\n        }\n      >\n        <InputBase\n          className={classes.input}\n          onChange={(event) => setQuery(event.target.value)}\n          startAdornment={<span className={classes.searchIcon} />}\n          endAdornment={\n            loading ? (\n              <LoadingIcon />\n            ) : (\n              <span onClick={handleClearInput} className={classes.clearIcon} />\n            )\n          }\n          placeholder=\"Search\"\n          value={query}\n        />\n      </WhiteTooltip>\n    </Hidden>\n  );\n}\n// This component controls the icons on the top right of the screen.\nfunction Links({ path }) {\n  const classes = useNavbarStyles();\n  const [showTooltip, setTooltip] = React.useState(true);\n  const [showList, setList] = React.useState(false);\n\n  // Review this. Week 4, video 4, time 31:30\n  // This is responsible for changing showTooltip from true to false after 5 seconds.\n  React.useEffect(() => {\n    const timeout = setTimeout(handleHideTooltip, 5000)\n    return () => {\n      clearTimeout(timeout);\n    }\n  }, [])\n\n  function handleToggleList() {\n    setList((prev) => !prev);\n  }\n\n  function handleHideTooltip() {\n    setTooltip(false);\n  }\n\n  return (\n    <div className={classes.linksContainer}>\n      <div className={classes.linksWrapper}>\n        <Hidden xsDown>\n          <AddIcon />\n        </Hidden>\n        {/* These next two links take to the home and explore page */}\n        <Link to=\"/\">{path === \"/\" ? <HomeActiveIcon /> : <HomeIcon />}</Link>\n        <Link to=\"/explore\">\n          {path === \"/explore\" ? <ExploreActiveIcon /> : <ExploreIcon />}\n        </Link>\n        {/* Controls the like Icon to be active or not. Its also going to control a list of some kind, still working on it */}\n        <div className={classes.notifications} onClick={handleToggleList}>\n          {showList ? <LikeActiveIcon /> : <LikeIcon />}\n        </div>\n        <Link to={`/${defaultCurrentUser.username}`}>\n          <RedTooltip\n            arrow\n            open={showTooltip}\n            onOpen={handleHideTooltip}\n            TransitionComponent={Zoom}\n            title={<NotificationTooltip />}\n          >\n          {/* This code puts a rings around the users picture if they are on they're profile */}\n          <div\n            className={\n              path === `/${defaultCurrentUser.username}`\n              ? classes.profileActive\n              : \"\"\n            }\n            ></div>\n            </RedTooltip>\n          <Avatar\n            src={defaultCurrentUser.profile_image}\n            className={classes.profileImage}\n          />\n        </Link>\n      </div>\n    </div>\n  );\n}\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}